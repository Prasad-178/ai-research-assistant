name: Deploy Backend to ECR and ECS

on:
  push:
    branches:
      - main

# These environment variables are shared across all jobs
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY_NAME: ${{ secrets.ECR_REPOSITORY_NAME }}
  ECR_PUBLIC_ALIAS: ${{ secrets.ECR_PUBLIC_REGISTRY_ALIAS }}

jobs:
  build-and-push-to-ecr:
    name: Build and Push Docker Image to ECR
    runs-on: ubuntu-latest
    outputs:
      image_digest: ${{ steps.build-image.outputs.digest }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free up disk space on runner
        run: |
          echo "Initial free space:"
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          echo "Free space after cleanup:"
          df -h

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR Public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: build-image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64 
          tags: ${{ env.ECR_PUBLIC_ALIAS }}/${{ env.ECR_REPOSITORY_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-ecs:
    name: Deploy Infrastructure with Terraform
    needs: build-and-push-to-ecr
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform -chdir=./terraform init

      - name: Terraform Validate
        id: validate
        run: terraform -chdir=./terraform validate

      - name: Terraform Apply
        id: apply
        run: |
          IMAGE_URI_WITH_DIGEST="${{ env.ECR_PUBLIC_ALIAS }}/${{ env.ECR_REPOSITORY_NAME }}@${{ needs.build-and-push-to-ecr.outputs.image_digest }}"
          terraform -chdir=./terraform apply -auto-approve \
            -var="ecr_image_uri=${IMAGE_URI_WITH_DIGEST}" \
            -var="model_s3_bucket=${{ secrets.MODEL_S3_BUCKET }}" \
            -var="model_s3_key_prefix=${{ secrets.MODEL_S3_KEY_PREFIX }}"
